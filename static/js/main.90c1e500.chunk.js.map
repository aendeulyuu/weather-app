{"version":3,"sources":["components/CitySelector.js","utility/utility.js","components/WeatherCard.js","components/WeatherToday.js","components/WeatherList.js","hooks/useFetch.js","App.js","api/config.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","CitySelector","props","classes","useState","city","setCity","isDisabled","setIsDisabled","error","setError","Grid","container","item","xs","Typography","variant","component","TextField","label","placeholder","color","value","onChange","event","target","length","onKeyDown","keyCode","onSearch","disabled","helperText","InputProps","startAdornment","InputAdornment","position","autoFocus","className","Button","startIcon","onClick","titleCase","str","words","toLowerCase","split","capitalized","map","word","charAt","toUpperCase","substring","join","handleImageError","e","description","fallbackText","trim","replace","onerror","src","card","background","WeatherCard","weatherData","date","moment","dt_txt","Card","CardActionArea","CardHeader","title","format","CardMedia","image","weather","icon","alt","onError","CardContent","main","temp_min","temp_max","CardActions","disableSpacing","Tooltip","TransitionComponent","Zoom","arrow","disableFocusListener","IconButton","card_media","display","width","WeatherToday","cityData","justifyContent","sm","md","lg","name","gutterBottom","temp","divider","marginTop","marginBottom","height","borderRadius","WeatherList","weathersData","Divider","slice","newWeathersData","increment","dateCompare","add","firstWeatherofDayData","filter","isSame","undefined","find","newWeatherData","push","transformWeathersData","dt","useFetch","initialUrl","data","setData","isLoading","setIsLoading","url","setUrl","useEffect","a","fetch","response","json","ok","Error","message","cod","fetchData","backdrop","zIndex","drawer","snackbar","textAlign","App","handleClose","reason","Container","Snackbar","open","autoHideDuration","Slide","onClose","Alert","severity","AlertTitle","Backdrop","CircularProgress","list","unstable_createMuiStrictModeTheme","overrides","MuiCssBaseline","body","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.90c1e500.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CitySelector = props => {\r\n  const classes = useStyles();\r\n\r\n  const [city, setCity] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const cityChangeHandler = event => {\r\n    if (event.target.value.length !== 0) {\r\n      setError(null);\r\n    }\r\n\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const cityOnKeyDown = event => {\r\n    if (event.keyCode === 13) {\r\n      if (city.length === 0) {\r\n        setError('Please enter a city.');\r\n        return;\r\n      }\r\n\r\n      setIsDisabled(true);\r\n      props.onSearch(city);\r\n    }\r\n  };\r\n\r\n  const searchHandler = () => {\r\n    if (city.length === 0) {\r\n      setError('Please enter a city.');\r\n      return;\r\n    }\r\n\r\n    setIsDisabled(true);\r\n    props.onSearch(city);\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setCity('');\r\n    setIsDisabled(false);\r\n    props.onSearch(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            Search Your City\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label={error ? 'Error' : 'City'}\r\n            placeholder=\"e.g. Manila\"\r\n            color=\"primary\"\r\n            value={city}\r\n            onChange={cityChangeHandler}\r\n            onKeyDown={cityOnKeyDown}\r\n            disabled={isDisabled}\r\n            error={error !== null}\r\n            helperText={error}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <LocationCityIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            autoFocus\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.root}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<SearchIcon />}\r\n            onClick={searchHandler}\r\n            disabled={isDisabled}\r\n          >\r\n            Check Weather\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<RefreshIcon />}\r\n            onClick={resetHandler}\r\n            disabled={!isDisabled}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CitySelector;\r\n","export const titleCase = (str = '') => {\r\n  str = str.toLowerCase();\r\n  let words = str.split(' ');\r\n\r\n  let capitalized = words.map(function (word) {\r\n    return word.charAt(0).toUpperCase() + word.substring(1, word.length);\r\n  });\r\n  return capitalized.join(' ');\r\n};\r\n\r\nexport const handleImageError = (e, description = '') => {\r\n  let fallbackText = description.trim().replace(' ', '+');\r\n\r\n  e.target.onerror = null;\r\n  e.target.src = `https://dummyimage.com/100x100/cfcfcf/fff.jpg&text=${fallbackText}`;\r\n};\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, titleCase } from '../utility/utility';\r\n\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    background: 'rgba(255, 255, 255, .3)',\r\n  },\r\n}));\r\n\r\nconst WeatherCard = props => {\r\n  const classes = useStyles();\r\n\r\n  const weatherData = { ...props.weatherData };\r\n  const date = moment(weatherData.dt_txt);\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardHeader title={date.format('dddd')}></CardHeader>\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n          title={titleCase(weatherData.weather[0].description)}\r\n          alt={weatherData.weather[0].description}\r\n          onError={e => handleImageError(e, weatherData.weather[0].description)}\r\n        ></CardMedia>\r\n        <CardContent>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {weatherData.main.temp_min}\r\n                &deg;\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {weatherData.main.temp_max} &deg;\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions disableSpacing>\r\n        <Tooltip\r\n          title=\"Share\"\r\n          TransitionComponent={Zoom}\r\n          arrow\r\n          disableFocusListener\r\n        >\r\n          <IconButton aria-label=\"share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, titleCase } from '../utility/utility';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    background: 'rgba(255, 255, 255, .3)',\r\n  },\r\n  card_media: {\r\n    display: 'initial',\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nconst WeatherToday = ({ weatherData, cityData }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} justifyContent=\"center\">\r\n      <Grid item xs={12} sm={9} md={6} lg={4}>\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            <CardHeader title={cityData.name}></CardHeader>\r\n            <CardMedia\r\n              className={classes.card_media}\r\n              component=\"img\"\r\n              image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n              title={titleCase(weatherData.weather[0].description)}\r\n              alt={weatherData.weather[0].description}\r\n              onError={e =>\r\n                handleImageError(e, weatherData.weather[0].description)\r\n              }\r\n            ></CardMedia>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {weatherData.main.temp}\r\n                &deg;\r\n              </Typography>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    {weatherData.main.temp_min}\r\n                    &deg;\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    {weatherData.main.temp_max} &deg;\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {titleCase(weatherData.weather[0].description)}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherToday;\r\n","import { Divider, Grid, makeStyles } from '@material-ui/core';\r\n\r\nimport WeatherCard from './WeatherCard';\r\nimport WeatherToday from './WeatherToday';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    marginTop: '20px',\r\n    marginBottom: '20px',\r\n    height: '4px',\r\n    borderRadius: '5px',\r\n  },\r\n});\r\n\r\nconst WeatherList = props => {\r\n  const classes = useStyles();\r\n\r\n  const transformWeathersData = () => {\r\n    const weathersData = props.weathersData.slice();\r\n    const newWeathersData = [];\r\n    for (let increment = 0; increment < weathersData.length; increment++) {\r\n      const dateCompare = moment().add(newWeathersData.length, 'days');\r\n      const firstWeatherofDayData = weathersData.filter(weatherData =>\r\n        moment(weatherData.dt_txt).isSame(dateCompare, 'day')\r\n      )[0];\r\n\r\n      if (\r\n        newWeathersData.find(newWeatherData =>\r\n          moment(newWeatherData.dt_txt).isSame(\r\n            moment(weathersData[increment].dt_txt),\r\n            'day'\r\n          )\r\n        ) === undefined\r\n      ) {\r\n        newWeathersData.push(firstWeatherofDayData);\r\n      }\r\n    }\r\n\r\n    return newWeathersData;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WeatherToday\r\n        weatherData={props.weathersData[0]}\r\n        cityData={props.cityData}\r\n      />\r\n      <Divider className={classes.divider} />\r\n      <Grid container spacing={1}>\r\n        {transformWeathersData().map(weatherData => (\r\n          <Grid item key={weatherData.dt} xs>\r\n            <WeatherCard weatherData={weatherData} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = initialUrl => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setIsLoading(true);\r\n\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(url);\r\n\r\n          const data = await response.json();\r\n\r\n          if (!response.ok) {\r\n            throw new Error(data.message);\r\n          }\r\n\r\n          setIsLoading(false);\r\n\r\n          if (data.cod >= 400) {\r\n            setError(data.message);\r\n            return;\r\n          }\r\n\r\n          setData(data);\r\n        } catch (error) {\r\n          setIsLoading(false);\r\n          setError(error.message);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [url]);\r\n\r\n  return { data, error, isLoading, setUrl, setData, setError };\r\n};\r\n\r\nexport default useFetch;\r\n","import './App.css';\n\nimport { API_BASE_URL, API_KEY } from './api/config';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport {\n  Backdrop,\n  CircularProgress,\n  Container,\n  Slide,\n  Snackbar,\n  makeStyles,\n} from '@material-ui/core';\n\nimport CitySelector from './components/CitySelector';\nimport WeatherList from './components/WeatherList';\nimport useFetch from './hooks/useFetch';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  snackbar: {\n    textAlign: 'initial',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const { data, error, isLoading, setUrl, setData, setError } = useFetch();\n\n  const searchCityHandler = city => {\n    if (city) {\n      setUrl(\n        `${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n      );\n    } else {\n      setUrl(null);\n      setData(null);\n      setError(null);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setError(null);\n  };\n\n  const getContent = () => {\n    if (error) {\n      return (\n        <Snackbar\n          className={classes.snackbar}\n          open\n          autoHideDuration={10000}\n          TransitionComponent={Slide}\n          onClose={handleClose}\n        >\n          <Alert severity=\"error\" onClose={handleClose}>\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        </Snackbar>\n      );\n    }\n\n    if (!data && isLoading) {\n      return (\n        <Backdrop className={classes.backdrop} open>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      );\n    }\n\n    if (!data) {\n      return null;\n    }\n\n    return <WeatherList weathersData={data.list} cityData={data.city} />;\n  };\n\n  return (\n    <Container className=\"App\">\n      <CitySelector onSearch={searchCityHandler} />\n\n      {getContent()}\n    </Container>\n  );\n};\n\nexport default App;\n","export const API_KEY = '34f38061357d6592fb59314ceb889161';\r\nexport const API_BASE_URL = 'https://api.openweathermap.org/';\r\n","import {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme,\n} from '@material-ui/core/styles';\n\nimport App from './App';\nimport { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst theme = unstable_createMuiStrictModeTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        body: {\n          backgroundImage: 'url(assets/weather-bg.jpg)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundAttachment: 'fixed',\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}