{"version":3,"sources":["components/CityInput.js","components/CountryInput.js","ui/CardUI.js","utility/utility.js","components/WeatherCardDetailsData.js","components/WeatherCardDetailsList.js","components/WeatherCardDetails.js","components/WeatherCard.js","components/WeatherCardList.js","components/WeatherToday.js","components/WeatherList.js","hooks/useFetch.js","App.js","api/config.js","index.js","ui/CardUI.module.css"],"names":["CityInput","onSearch","selectedCity","setSelectedCity","cityOptions","setCityOptions","isCityOptionsDisabled","selectedCountry","useState","open","setOpen","loading","length","useEffect","a","fetch","method","headers","body","JSON","stringify","country","response","json","results","data","Autocomplete","autoHighlight","options","value","disabled","onOpen","onClose","renderInput","params","TextField","label","placeholder","variant","InputProps","startAdornment","InputAdornment","position","endAdornment","CircularProgress","color","size","onChange","event","reason","type","CountryInput","setSelectedCountry","setIsCityOptionsDisabled","setOptions","map","CardUI","props","Grid","item","component","Card","className","classes","card","elevation","xs","sm","md","children","titleCase","str","words","toLowerCase","split","capitalized","word","charAt","toUpperCase","substring","join","handleImageError","e","description","fallbackText","trim","replace","target","onerror","src","WeatherCardDetailsData","weathersData","firstHourData","container","weather","icon","title","imageStyle","width","height","style","paddingTop","Typography","moment","dt_txt","format","main","temp","justifyContent","alignItems","align","faTint","humidity","faWind","wind","speed","toFixed","faCloud","clouds","all","faEye","visibility","useStyles","makeStyles","background","whiteSpace","card_others","border","boxShadow","WeatherCardDetailsList","selected","setSelected","isItemSelected","id","find","el","LeftArrow","useContext","VisibilityContext","isFirstItemVisible","scrollPrev","Box","margin","marginRight","IconButton","onClick","KeyboardArrowLeft","fontSize","RightArrow","isLastItemVisible","scrollNext","marginLeft","KeyboardArrowRight","weatherData","index","itemId","itemSelected","currentSelected","filter","concat","CardContent","direction","marginBottom","feels_like","WeatherCardDetails","card_media","display","card_action_area","textAlign","WeatherCard","date","CardActionArea","CardHeader","CardMedia","image","alt","onError","CardActions","disableSpacing","Tooltip","TransitionComponent","Zoom","arrow","disableFocusListener","scroll_menu","WeatherCardList","screenMatchesMin1024","useMediaQuery","wrapperClassName","WeatherToday","cityData","lg","name","divider","marginTop","borderRadius","WeatherList","transformWeathersData","exceptFirstDay","slice","isSame","newWeathersData","i","dateCompare","add","firstWeatherofDayData","undefined","newWeatherData","push","Divider","dayCompare","dt","useFetch","initialUrl","setData","error","setError","isLoading","setIsLoading","url","setUrl","ok","Error","message","cod","fetchData","theme","backdrop","zIndex","drawer","snackbar","fab","bottom","spacing","right","App","searchCityHandler","city","onCloseHandler","ScrollTop","window","trigger","useScrollTrigger","disableHysteresis","threshold","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Container","Snackbar","autoHideDuration","Slide","Alert","severity","AlertTitle","Backdrop","list","Fab","ArrowUpward","unstable_createMuiStrictModeTheme","typography","fontFamily","overrides","MuiCssBaseline","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","ReactDOM","render","StrictMode","ThemeProvider","StylesProvider","injectFirst","CssBaseline","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f2c6a132.chunk.js","sourcesContent":["import { CircularProgress, InputAdornment, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\nconst CityInput = ({\r\n  onSearch,\r\n  selectedCity,\r\n  setSelectedCity,\r\n  cityOptions,\r\n  setCityOptions,\r\n  isCityOptionsDisabled,\r\n  selectedCountry,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const loading = open && cityOptions.length === 0;\r\n\r\n  const onOpenHandler = () => {\r\n    setOpen(true);\r\n  };\r\n  const onCloseHandler = () => {\r\n    setOpen(false);\r\n  };\r\n  const renderInputHandler = params => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Search your city\"\r\n      placeholder=\"ex. Manila\"\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        ...params.InputProps,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <LocationCityIcon />\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n          <>\r\n            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n            {params.InputProps.endAdornment}\r\n          </>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n  const onChangeHandler = (event, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        setSelectedCity(value);\r\n        onSearch(value);\r\n        break;\r\n      case 'clear':\r\n        if (event.type === 'click') {\r\n          setSelectedCity(null);\r\n          onSearch(null);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      (async () => {\r\n        const response = await fetch(\r\n          'https://countriesnow.space/api/v0.1/countries/cities',\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              country: selectedCountry,\r\n            }),\r\n          }\r\n        );\r\n\r\n        const results = await response.json();\r\n\r\n        setCityOptions(results.data);\r\n      })();\r\n    }\r\n  }, [loading, selectedCountry, setCityOptions]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      autoHighlight\r\n      open={open}\r\n      loading={loading}\r\n      options={cityOptions}\r\n      value={selectedCity}\r\n      disabled={isCityOptionsDisabled}\r\n      onOpen={onOpenHandler}\r\n      onClose={onCloseHandler}\r\n      renderInput={renderInputHandler}\r\n      onChange={onChangeHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CityInput;\r\n","import { CircularProgress, InputAdornment, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nconst CountryInput = ({\r\n  onSearch,\r\n  setSelectedCountry,\r\n  setSelectedCity,\r\n  setCityOptions,\r\n  setIsCityOptionsDisabled,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const onOpenHandler = () => {\r\n    setOpen(true);\r\n  };\r\n  const onCloseHandler = () => {\r\n    setOpen(false);\r\n  };\r\n  const renderInputHandler = params => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Search your country\"\r\n      placeholder=\"ex. Philippines\"\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        ...params.InputProps,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <PublicIcon />\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n          <>\r\n            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n            {params.InputProps.endAdornment}\r\n          </>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n  const onChangeHandler = (event, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        setIsCityOptionsDisabled(false);\r\n        setSelectedCountry(value);\r\n        break;\r\n      case 'clear':\r\n        if (event.type === 'click') {\r\n          setSelectedCity(null);\r\n          setIsCityOptionsDisabled(true);\r\n          setSelectedCountry(null);\r\n          setCityOptions([]);\r\n          onSearch(null);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      (async () => {\r\n        const response = await fetch(\r\n          'https://countriesnow.space/api/v0.1/countries'\r\n        );\r\n\r\n        const results = await response.json();\r\n\r\n        setOptions(results.data.map(data => data.country));\r\n      })();\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      autoHighlight\r\n      open={open}\r\n      loading={loading}\r\n      options={options}\r\n      onOpen={onOpenHandler}\r\n      onClose={onCloseHandler}\r\n      renderInput={renderInputHandler}\r\n      onChange={onChangeHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CountryInput;\r\n","import { Card, Grid } from '@material-ui/core';\r\n\r\nimport classes from './CardUI.module.css';\r\n\r\nconst CardUI = props => {\r\n  return (\r\n    <Grid\r\n      item\r\n      component={Card}\r\n      className={`${classes.card} ${props.className}`}\r\n      elevation={props.elevation}\r\n      xs={props.xs}\r\n      sm={props.sm}\r\n      md={props.md}\r\n    >\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","export const titleCase = (str = '') => {\r\n  str = str.toLowerCase();\r\n  let words = str.split(' ');\r\n\r\n  let capitalized = words.map(function (word) {\r\n    return word.charAt(0).toUpperCase() + word.substring(1, word.length);\r\n  });\r\n  return capitalized.join(' ');\r\n};\r\n\r\nexport const handleImageError = (e, description = '') => {\r\n  let fallbackText = description.trim().replace(' ', '+');\r\n\r\n  e.target.onerror = null;\r\n  e.target.src = `https://dummyimage.com/100x100/cfcfcf/fff.jpg&text=${fallbackText}`;\r\n};\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport {\r\n  faCloud,\r\n  faEye,\r\n  faTint,\r\n  faWind,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Image from 'material-ui-image';\r\nimport moment from 'moment';\r\nimport { titleCase } from '../utility/utility';\r\n\r\nconst WeatherCardDetailsData = ({ weathersData }) => {\r\n  const firstHourData = { ...weathersData[0] };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6}>\r\n        <Image\r\n          src={`http://openweathermap.org/img/wn/${firstHourData.weather[0].icon}@2x.png`}\r\n          title={titleCase(firstHourData.weather[0].description)}\r\n          color={'transparent'}\r\n          imageStyle={{\r\n            width: '30%',\r\n            height: '30%',\r\n            position: 'initial',\r\n          }}\r\n          style={{ position: 'initial', paddingTop: '0' }}\r\n        />\r\n        <Typography component=\"p\">\r\n          {moment(firstHourData.dt_txt).format('dddd')}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {titleCase(firstHourData.weather[0].description)}\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\">\r\n          <b>{firstHourData.main.temp} &#8451;</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        align=\"center\"\r\n      >\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faTint} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Humidity\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.main.humidity} %</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faWind} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Wind Speed\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{(firstHourData.wind.speed * 3.6).toFixed(2)} km/h</b>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faCloud} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Cloudiness\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.clouds.all} %</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faEye} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Visibility\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.visibility / 1000} km</b>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherCardDetailsData;\r\n","import {\r\n  Box,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\r\nimport { useContext, useState } from 'react';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    background: 'transparent !important',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  card_others: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n  },\r\n});\r\n\r\nconst WeatherCardDetailsList = ({ weathersData }) => {\r\n  const classes = useStyles();\r\n\r\n  const firstHourData = { ...weathersData[0] };\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const isItemSelected = id => !!selected.find(el => el === id);\r\n\r\n  const clickHandler = id => () => {\r\n    const itemSelected = isItemSelected(id);\r\n\r\n    setSelected(currentSelected =>\r\n      itemSelected\r\n        ? currentSelected.filter(el => el !== id)\r\n        : currentSelected.concat(id)\r\n    );\r\n  };\r\n\r\n  const LeftArrow = () => {\r\n    const { isFirstItemVisible, scrollPrev } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <Box margin=\"auto\" marginRight={2}>\r\n        <IconButton\r\n          aria-label=\"left\"\r\n          disabled={isFirstItemVisible}\r\n          onClick={() => scrollPrev()}\r\n        >\r\n          <KeyboardArrowLeft fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const RightArrow = () => {\r\n    const { isLastItemVisible, scrollNext } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <Box margin=\"auto\" marginLeft={2}>\r\n        <IconButton\r\n          aria-label=\"right\"\r\n          disabled={isLastItemVisible}\r\n          onClick={() => scrollNext()}\r\n        >\r\n          <KeyboardArrowRight fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n      {weathersData.map((weatherData, index) => {\r\n        return (\r\n          <Box\r\n            itemId={index}\r\n            key={index}\r\n            onClick={clickHandler(index)}\r\n            selected={isItemSelected(index)}\r\n            margin={2}\r\n          >\r\n            <CardUI\r\n              className={`${classes.card} ${\r\n                index !== 0 ? classes.card_others : ''\r\n              }`}\r\n              elevation={index === 0 ? 5 : 0}\r\n            >\r\n              <CardContent>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <Box marginBottom={3}>\r\n                      <Typography variant=\"caption\" component=\"h3\">\r\n                        {moment(weatherData.dt_txt).format('h A')}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h4\" component=\"p\">\r\n                      <b>{firstHourData.main.temp} &#8451;</b>\r\n                    </Typography>\r\n                    {index === 0 && (\r\n                      <Typography variant=\"caption\" component=\"h4\">\r\n                        Feels like {weatherData.main.feels_like} &#8451;\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </CardUI>\r\n          </Box>\r\n        );\r\n      })}\r\n    </ScrollMenu>\r\n  );\r\n};\r\n\r\nexport default WeatherCardDetailsList;\r\n","import { CardContent } from '@material-ui/core';\r\nimport CardUI from '../ui/CardUI';\r\nimport WeatherCardDetailsData from './WeatherCardDetailsData';\r\nimport WeatherCardDetailsList from './WeatherCardDetailsList';\r\n\r\nconst WeatherCardDetails = ({ weathersData }) => {\r\n  return (\r\n    <CardUI>\r\n      <CardContent>\r\n        <WeatherCardDetailsData weathersData={weathersData} />\r\n        <br />\r\n        <WeatherCardDetailsList weathersData={weathersData} />\r\n      </CardContent>\r\n    </CardUI>\r\n  );\r\n};\r\n\r\nexport default WeatherCardDetails;\r\n","import {\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, titleCase } from '../utility/utility';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    width: '200px',\r\n  },\r\n  card_media: {\r\n    display: 'initial',\r\n    width: '50%',\r\n  },\r\n  card_action_area: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst WeatherCard = ({ weatherData }) => {\r\n  const classes = useStyles();\r\n\r\n  const date = moment(weatherData.dt_txt);\r\n\r\n  return (\r\n    <CardUI className={classes.card}>\r\n      <CardActionArea className={classes.card_action_area}>\r\n        <CardHeader align=\"center\" title={date.format('dddd')}></CardHeader>\r\n        <CardMedia\r\n          className={classes.card_media}\r\n          component=\"img\"\r\n          image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n          title={titleCase(weatherData.weather[0].description)}\r\n          alt={weatherData.weather[0].description}\r\n          onError={e => handleImageError(e, weatherData.weather[0].description)}\r\n        ></CardMedia>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n            {weatherData.main.temp}\r\n            &deg;\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions disableSpacing>\r\n        <Tooltip\r\n          title=\"Share\"\r\n          TransitionComponent={Zoom}\r\n          arrow\r\n          disableFocusListener\r\n        >\r\n          <IconButton aria-label=\"share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </CardActions>\r\n    </CardUI>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { Box, makeStyles, useMediaQuery } from '@material-ui/core';\r\n\r\nimport { ScrollMenu } from 'react-horizontal-scrolling-menu';\r\nimport WeatherCard from './WeatherCard';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  scroll_menu: {\r\n    '& div:nth-child(1)': {\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n});\r\n\r\nconst WeatherCardList = ({ weathersData }) => {\r\n  const classes = useStyles();\r\n  const screenMatchesMin1024 = useMediaQuery('(min-width:1024px)');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const isItemSelected = id => !!selected.find(el => el === id);\r\n\r\n  const clickHandler = id => () => {\r\n    const itemSelected = isItemSelected(id);\r\n\r\n    setSelected(currentSelected =>\r\n      itemSelected\r\n        ? currentSelected.filter(el => el !== id)\r\n        : currentSelected.concat(id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollMenu wrapperClassName={screenMatchesMin1024 && classes.scroll_menu}>\r\n      {weathersData.map((weatherData, index) => {\r\n        return (\r\n          <Box\r\n            itemId={index}\r\n            key={index}\r\n            onClick={clickHandler(index)}\r\n            selected={isItemSelected(index)}\r\n            margin={1}\r\n          >\r\n            <WeatherCard weatherData={weatherData} />\r\n          </Box>\r\n        );\r\n      })}\r\n    </ScrollMenu>\r\n  );\r\n};\r\n\r\nexport default WeatherCardList;\r\n","import {\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, titleCase } from '../utility/utility';\r\n\r\nimport CardUI from '../ui/CardUI';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card_media: {\r\n    display: 'initial',\r\n    width: '30%',\r\n  },\r\n  card_action_area: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst WeatherToday = ({ weatherData, cityData }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <CardUI xs={10} sm={8} md={6} lg={4}>\r\n        <CardActionArea className={classes.card_action_area}>\r\n          <CardHeader\r\n            align=\"center\"\r\n            title={`${cityData.name}, ${cityData.country}`}\r\n          ></CardHeader>\r\n          <CardMedia\r\n            className={classes.card_media}\r\n            component=\"img\"\r\n            image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n            title={titleCase(weatherData.weather[0].description)}\r\n            alt={weatherData.weather[0].description}\r\n            onError={e =>\r\n              handleImageError(e, weatherData.weather[0].description)\r\n            }\r\n          ></CardMedia>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              {weatherData.main.temp}\r\n              &deg;\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n              {titleCase(weatherData.weather[0].description)}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </CardUI>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherToday;\r\n","import { Divider, makeStyles } from '@material-ui/core';\r\n\r\nimport { Fragment } from 'react';\r\nimport WeatherCardDetails from './WeatherCardDetails';\r\nimport WeatherCardList from './WeatherCardList';\r\nimport WeatherToday from './WeatherToday';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    marginTop: '20px',\r\n    marginBottom: '20px',\r\n    height: '4px',\r\n    borderRadius: '5px',\r\n  },\r\n});\r\n\r\nconst WeatherList = props => {\r\n  const classes = useStyles();\r\n\r\n  const transformWeathersData = (exceptFirstDay = true) => {\r\n    let weathersData = props.weathersData.slice();\r\n    weathersData = exceptFirstDay\r\n      ? weathersData.filter(\r\n          weatherData => !moment(weatherData.dt_txt).isSame(moment(), 'day')\r\n        )\r\n      : weathersData;\r\n    const newWeathersData = [];\r\n\r\n    for (let i = 0; i < weathersData.length; i++) {\r\n      const dateCompare = moment().add(\r\n        exceptFirstDay ? newWeathersData.length + 1 : newWeathersData.length,\r\n        'days'\r\n      );\r\n\r\n      const firstWeatherofDayData = weathersData.filter(weatherData =>\r\n        moment(weatherData.dt_txt).isSame(dateCompare, 'day')\r\n      )[0];\r\n\r\n      if (\r\n        newWeathersData.find(newWeatherData =>\r\n          moment(newWeatherData.dt_txt).isSame(\r\n            moment(weathersData[i].dt_txt),\r\n            'day'\r\n          )\r\n        ) === undefined\r\n      ) {\r\n        newWeathersData.push(firstWeatherofDayData);\r\n      }\r\n    }\r\n\r\n    return newWeathersData;\r\n  };\r\n\r\n  const filterWeatherDetails = dayCompare => {\r\n    const weathersData = props.weathersData\r\n      .slice()\r\n      .filter(weatherData =>\r\n        moment(weatherData.dt_txt).isSame(moment(dayCompare), 'day')\r\n      );\r\n\r\n    return weathersData;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WeatherToday\r\n        weatherData={props.weathersData[0]}\r\n        cityData={props.cityData}\r\n      />\r\n      <br />\r\n      <WeatherCardList weathersData={transformWeathersData()} />\r\n      <Divider className={classes.divider} />\r\n      {transformWeathersData(false).map(weatherData => (\r\n        <Fragment key={weatherData.dt}>\r\n          <WeatherCardDetails\r\n            weathersData={filterWeatherDetails(weatherData.dt_txt)}\r\n          />\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = initialUrl => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setIsLoading(true);\r\n\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(url);\r\n\r\n          const data = await response.json();\r\n\r\n          if (!response.ok) {\r\n            throw new Error(data.message);\r\n          }\r\n\r\n          setIsLoading(false);\r\n\r\n          if (data.cod >= 400) {\r\n            setError(data.message);\r\n            return;\r\n          }\r\n\r\n          setData(data);\r\n        } catch (error) {\r\n          setIsLoading(false);\r\n          setError(error.message);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [url]);\r\n\r\n  return { data, error, isLoading, setUrl, setData, setError };\r\n};\r\n\r\nexport default useFetch;\r\n","import { API_BASE_URL, API_KEY } from './api/config';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Container,\n  Fab,\n  Grid,\n  Slide,\n  Snackbar,\n  Typography,\n  Zoom,\n  makeStyles,\n  useScrollTrigger,\n} from '@material-ui/core';\n\nimport { ArrowUpward } from '@material-ui/icons';\nimport CityInput from './components/CityInput';\nimport CountryInput from './components/CountryInput';\nimport WeatherList from './components/WeatherList';\nimport useFetch from './hooks/useFetch';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  snackbar: {\n    textAlign: 'initial',\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [cityOptions, setCityOptions] = useState([]);\n  const [isCityOptionsDisabled, setIsCityOptionsDisabled] = useState(true);\n\n  const { data, error, isLoading, setUrl, setData, setError } = useFetch();\n\n  const searchCityHandler = city => {\n    if (city) {\n      setUrl(\n        `${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n      );\n    } else {\n      setUrl(null);\n      setData(null);\n      setError(null);\n    }\n  };\n  const onCloseHandler = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setError(null);\n  };\n\n  const getContent = () => {\n    if (error) {\n      return (\n        <Snackbar\n          className={classes.snackbar}\n          open\n          autoHideDuration={10000}\n          TransitionComponent={Slide}\n          onClose={onCloseHandler}\n        >\n          <Alert severity=\"error\" onClose={onCloseHandler}>\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        </Snackbar>\n      );\n    }\n\n    if (!data && isLoading) {\n      return (\n        <Backdrop className={classes.backdrop} open>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      );\n    }\n\n    if (!data) {\n      return null;\n    }\n\n    return <WeatherList weathersData={data.list} cityData={data.city} />;\n  };\n\n  const ScrollTop = ({ children, window }) => {\n    const trigger = useScrollTrigger({\n      target: window ? window() : undefined,\n      disableHysteresis: true,\n      threshold: 100,\n    });\n\n    const scrollToTopHandler = event => {\n      const anchor = (event.target.ownerDocument || document).querySelector(\n        '#back-to-top-anchor'\n      );\n\n      if (anchor) {\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    };\n\n    return (\n      <Zoom in={trigger}>\n        <div\n          onClick={scrollToTopHandler}\n          role=\"presentation\"\n          className={classes.fab}\n        >\n          {children}\n        </div>\n      </Zoom>\n    );\n  };\n\n  return (\n    <Box marginTop={2} marginBottom={2}>\n      <Container className=\"App\">\n        <Typography\n          variant=\"h4\"\n          component=\"h2\"\n          align=\"center\"\n          id=\"back-to-top-anchor\"\n        >\n          Check Your Weather\n        </Typography>\n\n        <Box marginTop={2} marginBottom={2}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={6}>\n              <CountryInput\n                onSearch={searchCityHandler}\n                setSelectedCountry={setSelectedCountry}\n                setSelectedCity={setSelectedCity}\n                setCityOptions={setCityOptions}\n                setIsCityOptionsDisabled={setIsCityOptionsDisabled}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={6}>\n              <CityInput\n                onSearch={searchCityHandler}\n                selectedCity={selectedCity}\n                setSelectedCity={setSelectedCity}\n                cityOptions={cityOptions}\n                setCityOptions={setCityOptions}\n                isCityOptionsDisabled={isCityOptionsDisabled}\n                selectedCountry={selectedCountry}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n\n        {getContent()}\n        <ScrollTop>\n          <Fab variant=\"extended\" aria-label=\"scroll back to top\">\n            <ArrowUpward />\n            Back To Top\n          </Fab>\n        </ScrollTop>\n      </Container>\n    </Box>\n  );\n};\n\nexport default App;\n","export const API_KEY = '34f38061357d6592fb59314ceb889161';\r\nexport const API_BASE_URL = 'https://api.openweathermap.org/';\r\n","import {\n  StylesProvider,\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme,\n} from '@material-ui/core/styles';\n\nimport App from './App';\nimport { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst theme = unstable_createMuiStrictModeTheme({\n  typography: {\n    fontFamily: 'Ubuntu',\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '*::-webkit-scrollbar': {\n          borderRadius: '5px',\n          width: '7px',\n          backgroundColor: '#F5F5F5',\n          height: '7px',\n        },\n        '*::-webkit-scrollbar-track': {\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.3)',\n          borderRadius: '5px',\n          backgroundColor: '#F5F5F5',\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '5px',\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.3)',\n          backgroundColor: '#555',\n        },\n        body: {\n          backgroundImage: 'url(assets/weather-bg.jpg)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundAttachment: 'fixed',\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <CssBaseline />\n        <App />\n      </StylesProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardUI_card__2d1md\"};"],"sourceRoot":""}