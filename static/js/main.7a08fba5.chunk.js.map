{"version":3,"sources":["ui/CardUI.module.css","components/CityInput.js","components/CountryInput.js","ui/ScrollToTop.js","ui/CardUI.js","utility/utility.js","components/WeatherCardDetailsData.js","components/WeatherCardDetailsList.js","components/WeatherCardDetails.js","components/WeatherCard.js","components/WeatherCardList.js","components/WeatherToday.js","components/WeatherList.js","hooks/useFetch.js","App.js","api/config.js","index.js"],"names":["module","exports","CityInput","onSearch","selectedCity","setSelectedCity","cityOptions","setCityOptions","isCityOptionsDisabled","selectedCountry","useState","open","setOpen","loading","length","useEffect","a","fetch","method","headers","body","JSON","stringify","country","response","json","results","data","Autocomplete","autoHighlight","options","value","disabled","onOpen","onClose","renderInput","params","TextField","label","placeholder","variant","InputProps","startAdornment","InputAdornment","position","endAdornment","CircularProgress","color","size","onChange","event","reason","type","getOptionSelected","option","toString","toLowerCase","CountryInput","setSelectedCountry","setIsCityOptionsDisabled","setOptions","map","useStyles","makeStyles","theme","fab","bottom","spacing","right","marginRight","ScrollToTop","classes","ScrollTop","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","role","className","onClick","scrollTo","top","behavior","Fab","ArrowUpward","CardUI","props","Grid","item","component","Card","card","elevation","xs","sm","md","id","titleCase","str","words","split","capitalized","word","charAt","toUpperCase","substring","join","handleImageError","e","description","fallbackText","trim","replace","target","onerror","src","scrollHandler","element","yCoordinate","getBoundingClientRect","pageYOffset","WeatherCardDetailsData","weathersData","firstHourData","container","weather","icon","title","imageStyle","width","height","style","paddingTop","Typography","moment","dt_txt","format","main","temp","justifyContent","alignItems","align","faTint","humidity","faWind","wind","speed","toFixed","faCloud","clouds","all","faEye","visibility","background","whiteSpace","card_others","border","boxShadow","WeatherCardDetailsList","selected","setSelected","isItemSelected","find","el","LeftArrow","useContext","VisibilityContext","isFirstItemVisible","scrollPrev","Box","margin","IconButton","KeyboardArrowLeft","fontSize","RightArrow","isLastItemVisible","scrollNext","marginLeft","KeyboardArrowRight","weatherData","index","itemId","itemSelected","currentSelected","filter","concat","CardContent","direction","marginBottom","feels_like","WeatherCardDetails","transformedWeathersData","getSameDayWeathersData","dayCompare","slice","isSame","card_media","display","hash_link","textAlign","textDecoration","WeatherCard","location","useLocation","smooth","CardActionArea","to","pathname","scroll","CardHeader","CardMedia","image","alt","onError","scroll_menu","WeatherCardList","screenMatchesMin1024","useMediaQuery","wrapperClassName","WeatherToday","cityData","lg","name","divider","marginTop","borderRadius","WeatherList","transformWeathersData","exceptFirstDay","newWeathersData","i","dateCompare","add","firstWeatherofDayData","undefined","newWeatherData","push","Divider","useFetch","countryParam","cityParam","initialUrl","setData","error","setError","isLoading","setIsLoading","url","setUrl","history","useHistory","ok","Error","message","cod","hash","document","getElementById","setTimeout","console","log","fetchData","backdrop","zIndex","drawer","snackbar","App","useParams","city","searchCityHandler","onCloseHandler","Container","Snackbar","autoHideDuration","TransitionComponent","Slide","Alert","severity","AlertTitle","Backdrop","list","unstable_createMuiStrictModeTheme","typography","fontFamily","overrides","MuiCssBaseline","html","scrollBehavior","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","Routing","exact","path","ReactDOM","render","StrictMode","ThemeProvider","StylesProvider","injectFirst","CssBaseline"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,KAAO,uB,qSC4GVC,EAvGG,SAAC,GAQZ,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,aACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,gBAEA,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUF,GAA+B,IAAvBL,EAAYQ,OA4EpC,OA3BAC,qBAAU,WACJF,GACF,sBAAC,8BAAAG,EAAA,sEACwBC,MACrB,uDACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,QAASd,MAThB,cACOe,EADP,gBAcuBA,EAASC,OAdhC,OAcOC,EAdP,OAgBCnB,EAAemB,EAAQC,MAhBxB,0CAAD,KAmBD,CAACd,EAASJ,EAAiBF,IAE9BQ,qBAAU,WACJX,GAAcD,EAASC,KAC1B,CAACA,EAAcD,IAGhB,cAACyB,EAAA,EAAD,CACEC,eAAa,EACblB,KAAMA,EACNE,QAASA,EACTiB,QAASxB,EACTyB,MAAO3B,EACP4B,SAAUxB,EACVyB,OAlFkB,WACpBrB,GAAQ,IAkFNsB,QAhFmB,WACrBtB,GAAQ,IAgFNuB,YA9EuB,SAAAC,GAAM,OAC/B,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,mBACNC,YAAY,aACZC,QAAQ,WACRC,WAAU,2BACLL,EAAOK,YADF,IAERC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC,IAAD,MAGJC,aACE,qCACGhC,EAAU,cAACiC,EAAA,EAAD,CAAkBC,MAAM,UAAUC,KAAM,KAAS,KAC3DZ,EAAOK,WAAWI,sBA+DzBI,SAzDoB,SAACC,EAAOnB,EAAOoB,GACrC,OAAQA,GACN,IAAK,gBACH9C,EAAgB0B,GAChB5B,EAAS4B,GACT,MACF,IAAK,QACgB,UAAfmB,EAAME,OACR/C,EAAgB,MAChBF,EAAS,SAiDbkD,kBA1C2B,SAACC,EAAQvB,GAAT,OAC7BuB,EAAOC,WAAWC,gBAAkBzB,EAAMwB,WAAWC,kB,kBCmC1CC,EA5FM,SAAC,GAOf,IANLtD,EAMI,EANJA,SACAM,EAKI,EALJA,gBACAiD,EAII,EAJJA,mBACArD,EAGI,EAHJA,gBACAE,EAEI,EAFJA,eACAoD,EACI,EADJA,yBAEA,EAAwBjD,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOoB,EAAP,KAAgB8B,EAAhB,KACM/C,EAAUF,GAA2B,IAAnBmB,EAAQhB,OAkEhC,OAdAC,qBAAU,WACJF,GACF,sBAAC,8BAAAG,EAAA,sEACwBC,MACrB,iDAFH,cACOO,EADP,gBAKuBA,EAASC,OALhC,OAKOC,EALP,OAOCkC,EAAWlC,EAAQC,KAAKkC,KAAI,SAAAlC,GAAI,OAAIA,EAAKJ,YAP1C,0CAAD,KAUD,CAACV,IAGF,cAACe,EAAA,EAAD,CACEC,eAAa,EACblB,KAAMA,EACNE,QAASA,EACTiB,QAASA,EACTC,MAAOtB,EACPwB,OAvEkB,WACpBrB,GAAQ,IAuENsB,QArEmB,WACrBtB,GAAQ,IAqENuB,YAnEuB,SAAAC,GAAM,OAC/B,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,sBACNC,YAAY,kBACZC,QAAQ,WACRC,WAAU,2BACLL,EAAOK,YADF,IAERC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC,IAAD,MAGJC,aACE,qCACGhC,EAAU,cAACiC,EAAA,EAAD,CAAkBC,MAAM,UAAUC,KAAM,KAAS,KAC3DZ,EAAOK,WAAWI,sBAoDzBI,SA9CoB,SAACC,EAAOnB,EAAOoB,GACrC,OAAQA,GACN,IAAK,gBACHQ,GAAyB,GACzBD,EAAmB3B,GACnB,MACF,IAAK,QACgB,UAAfmB,EAAME,OACR/C,EAAgB,MAChBsD,GAAyB,GACzBD,EAAmB,MACnBnD,EAAe,IACfJ,EAAS,SAmCbkD,kBA5B2B,SAACC,EAAQvB,GAAT,OAC7BuB,EAAOC,WAAWC,gBAAkBzB,EAAMwB,WAAWC,kB,oCC9DnDM,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,IAAK,CACHrB,SAAU,QACVsB,OAAQF,EAAMG,QAAQ,GACtBC,MAAOJ,EAAMG,QAAQ,GACrBE,YAAaL,EAAMG,QAAQ,QAwChBG,EApCK,WAClB,IAAMC,EAAUT,IAEVU,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACvBC,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,MAOb,OACE,cAACC,EAAA,EAAD,CAAMC,GAAIL,EAAV,SACE,qBACEM,KAAK,eACLC,UAAWX,EAAQN,IACnBkB,QATqB,WACzBT,EAAOU,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAKlC,SAKGb,OAMT,OACE,cAACD,EAAD,CAAWE,OAAQA,OAAnB,SACE,eAACa,EAAA,EAAD,CAAK/C,QAAQ,WAAW,aAAW,qBAAnC,UACE,cAACgD,EAAA,EAAD,IADF,oB,6CCpBSC,EAjBA,SAAAC,GACb,OACE,cAACC,EAAA,EAAD,CACEC,MAAI,EACJC,UAAWC,IACXZ,UAAS,UAAKX,IAAQwB,KAAb,YAAqBL,EAAMR,WACpCc,UAAWN,EAAMM,UACjBC,GAAIP,EAAMO,GACVC,GAAIR,EAAMQ,GACVC,GAAIT,EAAMS,GACVC,GAAIV,EAAMU,GARZ,SAUGV,EAAMjB,Y,mDChBA4B,GAAY,WAAe,IAAdC,EAAa,uDAAP,GAE1BC,GADJD,EAAMA,EAAI9C,eACMgD,MAAM,KAElBC,EAAcF,EAAM1C,KAAI,SAAU6C,GACpC,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,UAAU,EAAGH,EAAK5F,WAE/D,OAAO2F,EAAYK,KAAK,MAGbC,GAAmB,SAACC,GAAyB,IAAtBC,EAAqB,uDAAP,GAC5CC,EAAeD,EAAYE,OAAOC,QAAQ,IAAK,KAEnDJ,EAAEK,OAAOC,QAAU,KACnBN,EAAEK,OAAOE,IAAT,6DAAqEL,IAG1DM,GAAgB,SAAAC,GAC3B,IAAMC,EAAcD,EAAQE,wBAAwBtC,IAAMX,OAAOkD,YAEjElD,OAAOU,SAAS,CAAEC,IAAKqC,GADN,GAC6BpC,SAAU,YCuE3CuC,GA9EgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1BC,EAAa,eAAQD,EAAa,IAExC,OACE,eAACnC,EAAA,EAAD,CAAMqC,WAAS,EAAf,UACE,eAACrC,EAAA,EAAD,CAAMC,MAAI,EAACK,GAAI,EAAf,UACE,cAAC,IAAD,CACEsB,IAAG,2CAAsCQ,EAAcE,QAAQ,GAAGC,KAA/D,WACHC,MAAO9B,GAAU0B,EAAcE,QAAQ,GAAGhB,aAC1ClE,MAAO,cACPqF,WAAY,CACVC,MAAO,MACPC,OAAQ,MACR1F,SAAU,WAEZ2F,MAAO,CAAE3F,SAAU,UAAW4F,WAAY,OAE5C,cAACC,EAAA,EAAD,CAAY5C,UAAU,IAAtB,SACG6C,IAAOX,EAAcY,QAAQC,OAAO,UAEvC,cAACH,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,KAAnC,SACGQ,GAAU0B,EAAcE,QAAQ,GAAGhB,eAEtC,cAACwB,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,IAAnC,SACE,8BAAIkC,EAAcc,KAAKC,KAAvB,kBAGJ,eAACnD,EAAA,EAAD,CACEqC,WAAS,EACTpC,MAAI,EACJK,GAAI,EACJ8C,eAAe,eACfC,WAAW,SACXC,MAAM,SANR,UAQE,eAACtD,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CAAiBsC,KAAMgB,MACvB,cAACT,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,sBAGA,cAAC4C,EAAA,EAAD,CAAY5C,UAAU,IAAtB,SACE,8BAAIkC,EAAcc,KAAKM,SAAvB,aAGJ,eAACxD,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CAAiBsC,KAAMkB,MACvB,cAACX,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,wBAGA,cAAC4C,EAAA,EAAD,CAAY5C,UAAU,IAAtB,SACE,+BAAgC,IAA3BkC,EAAcsB,KAAKC,OAAaC,QAAQ,GAA7C,gBAIJ,eAAC5D,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CAAiBsC,KAAMsB,MACvB,cAACf,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,wBAGA,cAAC4C,EAAA,EAAD,CAAY5C,UAAU,IAAtB,SACE,8BAAIkC,EAAc0B,OAAOC,IAAzB,aAGJ,eAAC/D,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CAAiBsC,KAAMyB,MACvB,cAAClB,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,wBAGA,cAAC4C,EAAA,EAAD,CAAY5C,UAAU,IAAtB,SACE,8BAAIkC,EAAc6B,WAAa,IAA/B,iBAIN,cAACjE,EAAA,EAAD,Q,uCCvEA7B,GAAYC,YAAW,CAC3BgC,KAAM,CACJ8D,WAAY,yBACZC,WAAY,UAEdC,YAAa,CACXC,OAAQ,OACRC,UAAW,UAmGAC,GA/FgB,SAAC,GAAsB,IAApBpC,EAAmB,EAAnBA,aAC1BvD,EAAUT,KAEhB,EAAgCpD,mBAAS,IAAzC,mBAAOyJ,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,SAAAjE,GAAE,QAAM+D,EAASG,MAAK,SAAAC,GAAE,OAAIA,IAAOnE,MA4C1D,OACE,cAAC,cAAD,CAAYoE,UAjCI,WAChB,MAA2CC,qBAAWC,sBAA9CC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,WAE5B,OACE,cAACC,EAAA,EAAD,CAAKC,OAAO,OAAOzG,YAAa,EAAhC,SACE,cAAC0G,GAAA,EAAD,CACE,aAAW,OACX/I,SAAU2I,EACVxF,QAAS,kBAAMyF,KAHjB,SAKE,cAACI,GAAA,EAAD,CAAmBC,SAAS,eAuBAC,WAjBjB,WACjB,MAA0CT,qBAAWC,sBAA7CS,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,WAE3B,OACE,cAACP,EAAA,EAAD,CAAKC,OAAO,OAAOO,WAAY,EAA/B,SACE,cAACN,GAAA,EAAD,CACE,aAAW,QACX/I,SAAUmJ,EACVhG,QAAS,kBAAMiG,KAHjB,SAKE,cAACE,GAAA,EAAD,CAAoBL,SAAS,eAOnC,SACGnD,EAAajE,KAAI,SAAC0H,EAAaC,GAC9B,OACE,cAACX,EAAA,EAAD,CACEY,OAAQD,EAERrG,SAjDWiB,EAiDWoF,EAjDL,WACzB,IAAME,EAAerB,EAAejE,GAEpCgE,GAAY,SAAAuB,GAAe,OACzBD,EACIC,EAAgBC,QAAO,SAAArB,GAAE,OAAIA,IAAOnE,KACpCuF,EAAgBE,OAAOzF,QA4CrB+D,SAAUE,EAAemB,GACzBV,OAAQ,EALV,SAOE,cAAC,EAAD,CACE5F,UAAS,UAAKX,EAAQwB,KAAb,YACG,IAAVyF,EAAcjH,EAAQwF,YAAc,IAEtC/D,UAAqB,IAAVwF,EAAc,EAAI,EAJ/B,SAME,cAACM,EAAA,EAAD,UACE,eAACnG,EAAA,EAAD,CAAMqC,WAAS,EAAC+D,UAAU,SAA1B,UACE,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACiF,EAAA,EAAD,CAAKmB,aAAc,EAAnB,SACE,cAACvD,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,SACG6C,IAAO6C,EAAY5C,QAAQC,OAAO,aAIzC,eAACjD,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,cAAC6C,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,IAAnC,SACE,8BAAI0F,EAAY1C,KAAKC,KAArB,eAES,IAAV0C,GACC,eAAC/C,EAAA,EAAD,CAAYjG,QAAQ,UAAUqD,UAAU,KAAxC,wBACc0F,EAAY1C,KAAKoD,WAD/B,wBAzBLT,GAhDM,IAAApF,QCaR8F,GAtCY,SAAC,GAA+C,IAA7CpE,EAA4C,EAA5CA,aAAcqE,EAA8B,EAA9BA,wBACpCC,EAAyB,SAAAC,GAO7B,OANwBvE,EACrBwE,QACAV,QAAO,SAAAL,GAAW,OACjB7C,IAAO6C,EAAY5C,QAAQ4D,OAAO7D,IAAO2D,GAAa,WAM5D,OAAOF,EAAwBtI,KAAI,SAAC0H,EAAaC,GAC/C,IAAMpF,EACM,IAAVoF,EACI,QACA9C,IAAO6C,EAAY5C,QAAQC,OAAO,QAAQpF,cAEhD,OACE,eAAC,WAAD,WACE,cAACqH,EAAA,EAAD,CAAKhF,UAAW,UAAWO,GAAIA,EAA/B,SACE,cAAC,EAAD,UACE,eAAC0F,EAAA,EAAD,WACE,cAAC,GAAD,CACEhE,aAAcsE,EAAuBb,EAAY5C,UAEnD,uBACA,cAAC,GAAD,CACEb,aAAcsE,EAAuBb,EAAY5C,iBAKzD,yBAda4C,EAAY5C,Y,iDCX3B7E,GAAYC,aAAW,iBAAO,CAClCgC,KAAM,CACJsC,MAAO,SAETmE,WAAY,CACVC,QAAS,UACTpE,MAAO,OAETqE,UAAW,CACTC,UAAW,SACXC,eAAgB,UAChB7J,MAAO,eA2CI8J,GAvCK,SAAC,GAAqB,IAAnBtB,EAAkB,EAAlBA,YACfhH,EAAUT,KAEVgJ,EAAWC,cAEjB,OACE,cAAC,EAAD,CAAQ7H,UAAWX,EAAQwB,KAA3B,SACE,eAAC,KAAD,CACEiH,QAAM,EACN9H,UAAWX,EAAQmI,UACnB7G,UAAWoH,KACXC,GAAE,UAAKJ,EAASK,SAAd,YAA0BzE,IAAO6C,EAAY5C,QAC5CC,OAAO,QACPpF,eACH4J,OAAQ5F,GAPV,UASE,cAAC6F,GAAA,EAAD,CACEpE,MAAM,SACNd,MAAOO,IAAO6C,EAAY5C,QAAQC,OAAO,UAE3C,cAAC0E,GAAA,EAAD,CACEpI,UAAWX,EAAQiI,WACnB3G,UAAU,MACV0H,MAAK,2CAAsChC,EAAYtD,QAAQ,GAAGC,KAA7D,WACLC,MAAO9B,GAAUkF,EAAYtD,QAAQ,GAAGhB,aACxCuG,IAAKjC,EAAYtD,QAAQ,GAAGhB,YAC5BwG,QAAS,SAAAzG,GAAC,OAAID,GAAiBC,EAAGuE,EAAYtD,QAAQ,GAAGhB,gBAE3D,cAAC6E,EAAA,EAAD,UACE,eAACrD,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,KAAKoD,MAAM,SAA9C,UACGsC,EAAY1C,KAAKC,KADpB,kBCrDJhF,GAAYC,YAAW,CAC3B2J,YAAa,CACX,qBAAsB,CACpB3E,eAAgB,aA0CP4E,GArCS,SAAC,GAAsB,IAApB7F,EAAmB,EAAnBA,aACnBvD,EAAUT,KACV8J,EAAuBC,aAAc,sBAE3C,EAAgCnN,mBAAS,IAAzC,mBAAOyJ,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,SAAAjE,GAAE,QAAM+D,EAASG,MAAK,SAAAC,GAAE,OAAIA,IAAOnE,MAY1D,OACE,cAAC,cAAD,CAAY0H,iBAAkBF,GAAwBrJ,EAAQmJ,YAA9D,SACG5F,EAAajE,KAAI,SAAC0H,EAAaC,GAC9B,OACE,cAACX,EAAA,EAAD,CACEY,OAAQD,EAERrG,SAjBWiB,EAiBWoF,EAjBL,WACzB,IAAME,EAAerB,EAAejE,GAEpCgE,GAAY,SAAAuB,GAAe,OACzBD,EACIC,EAAgBC,QAAO,SAAArB,GAAE,OAAIA,IAAOnE,KACpCuF,EAAgBE,OAAOzF,QAYrB+D,SAAUE,EAAemB,GACzBV,OAAQ,EALV,SAOE,cAAC,GAAD,CAAaS,YAAaA,KALrBC,GAhBM,IAAApF,QCPjBtC,GAAYC,aAAW,iBAAO,CAClCyI,WAAY,CACVC,QAAS,UACTpE,MAAO,OAETqE,UAAW,CACTC,UAAW,SACXC,eAAgB,UAChB7J,MAAO,eAgDIgL,GA5CM,SAAC,GAA+B,IAA7BxC,EAA4B,EAA5BA,YAAayC,EAAe,EAAfA,SAC7BzJ,EAAUT,KAEVgJ,EAAWC,cAEjB,OACE,cAACpH,EAAA,EAAD,CAAMqC,WAAS,EAACe,eAAe,SAA/B,SACE,cAAC,EAAD,CAAQ9C,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG8H,GAAI,EAAlC,SACE,eAAC,KAAD,CACEjB,QAAM,EACN9H,UAAWX,EAAQmI,UACnB7G,UAAWoH,KACXC,GAAE,UAAKJ,EAASK,SAAd,UACFC,OAAQ5F,GALV,UAOE,cAAC6F,GAAA,EAAD,CACEpE,MAAM,SACNd,MAAK,UAAK6F,EAASE,KAAd,aAAuBF,EAASzM,WAEvC,cAAC+L,GAAA,EAAD,CACEpI,UAAWX,EAAQiI,WACnB3G,UAAU,MACV0H,MAAK,2CAAsChC,EAAYtD,QAAQ,GAAGC,KAA7D,WACLC,MAAO9B,GAAUkF,EAAYtD,QAAQ,GAAGhB,aACxCuG,IAAKjC,EAAYtD,QAAQ,GAAGhB,YAC5BwG,QAAS,SAAAzG,GAAC,OACRD,GAAiBC,EAAGuE,EAAYtD,QAAQ,GAAGhB,gBAG/C,eAAC6E,EAAA,EAAD,WACE,eAACrD,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,KAAKoD,MAAM,SAA9C,UACGsC,EAAY1C,KAAKC,KADpB,UAIA,cAACL,EAAA,EAAD,CAAYjG,QAAQ,QAAQqD,UAAU,IAAIoD,MAAM,SAAhD,SACG5C,GAAUkF,EAAYtD,QAAQ,GAAGhB,0BCvD1CnD,GAAYC,YAAW,CAC3BoK,QAAS,CACPC,UAAW,OACXpC,aAAc,OACd1D,OAAQ,MACR+F,aAAc,SA0DHC,GAtDK,SAAA5I,GAClB,IAAMnB,EAAUT,KAEVyK,EAAwB,WAA4B,IAA3BC,IAA0B,yDACnD1G,EAAepC,EAAMoC,aAAawE,QACtCxE,EAAe0G,EACX1G,EAAa8D,QACX,SAAAL,GAAW,OAAK7C,IAAO6C,EAAY5C,QAAQ4D,OAAO7D,MAAU,UAE9DZ,EAGJ,IAFA,IAAM2G,EAAkB,GAP+B,WAS9CC,GACP,IAAMC,EAAcjG,MAASkG,IAC3BJ,EAAiBC,EAAgB3N,OAAS,EAAI2N,EAAgB3N,OAC9D,QAGI+N,EAAwB/G,EAAa8D,QAAO,SAAAL,GAAW,OAC3D7C,IAAO6C,EAAY5C,QAAQ4D,OAAOoC,EAAa,UAC/C,QAQMG,IALNL,EAAgBnE,MAAK,SAAAyE,GAAc,OACjCrG,IAAOqG,EAAepG,QAAQ4D,OAC5B7D,IAAOZ,EAAa4G,GAAG/F,QACvB,WAIJ8F,EAAgBO,KAAKH,IAlBhBH,EAAI,EAAGA,EAAI5G,EAAahH,OAAQ4N,IAAM,EAAtCA,GAsBT,OAAOD,GAGT,OACE,qCACE,cAAC,GAAD,CACElD,YAAa7F,EAAMoC,aAAa,GAChCkG,SAAUtI,EAAMsI,WAElB,uBACA,cAAC,GAAD,CAAiBlG,aAAcyG,MAC/B,cAACU,EAAA,EAAD,CAAS/J,UAAWX,EAAQ4J,UAC5B,cAAC,GAAD,CACErG,aAAcpC,EAAMoC,aAAawE,QACjCH,wBAAyBoC,GAAsB,SCJxCW,GAvDE,SAACC,EAAcC,EAAWC,GACzC,MAAwB3O,mBAAS,MAAjC,mBAAOiB,EAAP,KAAa2N,EAAb,KACA,EAA0B5O,mBAAS,MAAnC,mBAAO6O,EAAP,KAAcC,EAAd,KACA,EAAkC9O,mBAAS,MAA3C,mBAAO+O,EAAP,KAAkBC,EAAlB,KACA,EAAsBhP,mBAAS2O,GAA/B,mBAAOM,EAAP,KAAYC,EAAZ,KAEIC,EAAUC,cA8Cd,OA5CA/O,qBAAU,WACJ4O,IACFD,GAAa,GAEE,uCAAG,kCAAA1O,EAAA,+EAESC,MAAM0O,GAFf,cAERnO,EAFQ,gBAIKA,EAASC,OAJd,UAIRE,EAJQ,OAMTH,EAASuO,GANA,sBAON,IAAIC,MAAMrO,EAAKsO,SAPT,UAUdP,GAAa,KAET/N,EAAKuO,KAAO,KAZF,wBAaZV,EAAS7N,EAAKsO,SAbF,2BAiBdX,EAAQ3N,IAEAwO,EAASzL,OAAOoI,SAAhBqD,QAEA1I,EAAU2I,SAASC,eAAeF,EAAK/I,QAAQ,IAAK,KAC1DkJ,WAAW9I,GAAcC,KAG3B8I,QAAQC,IAAIX,GACRV,GAAgBC,GAClBS,EAAQb,KAAR,WACMG,EAAa3L,cADnB,YACoC4L,EAAU5L,gBA5BlC,kDA+BdkM,GAAa,GACbF,EAAS,KAAMS,SAhCD,0DAAH,oDAoCfQ,MAED,CAACd,EAAKE,EAASV,EAAcC,IAEzB,CAAEzN,OAAM4N,QAAOE,YAAWG,SAAQN,UAASE,aCnC9C1L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC0M,SAAU,CACRC,OAAQ3M,EAAM2M,OAAOC,OAAS,EAC9B7N,MAAO,QAET8N,SAAU,CACRlE,UAAW,WAEb1I,IAAK,CACHrB,SAAU,QACVsB,OAAQF,EAAMG,QAAQ,GACtBC,MAAOJ,EAAMG,QAAQ,GACrBE,YAAaL,EAAMG,QAAQ,QAkHhB2M,GA9GH,WAAO,IAAD,EACVvM,EAAUT,KAEhB,EAAmDiN,cAAlC5B,EAAjB,EAAQ5N,QAA6B6N,EAArC,EAA+B4B,KAE/B,EAA8CtQ,mBAAQ,OAACyO,QAAD,IAACA,IAAgB,MAAvE,mBAAO1O,EAAP,KAAwBiD,EAAxB,KAEA,EAAwChD,mBAAQ,OAAC0O,QAAD,IAACA,IAAa,MAA9D,mBAAOhP,EAAP,KAAqBC,EAArB,KACA,EAAsCK,mBAAS,IAA/C,mBAAOJ,EAAP,KAAoBC,EAApB,KACA,EAA0DG,mBAAQ,WAC/D0O,SAD+D,UAAlE,mBAAO5O,EAAP,KAA8BmD,EAA9B,KAIA,EAA8DuL,GAC5DzO,EACAL,GAFMuB,EAAR,EAAQA,KAAM4N,EAAd,EAAcA,MAAOE,EAArB,EAAqBA,UAAWG,EAAhC,EAAgCA,OAAQN,EAAxC,EAAwCA,QAASE,EAAjD,EAAiDA,SAK3CyB,EAAoB,SAAAD,GACpBA,EACFpB,EAAO,GAAD,OCzDgB,kCDyDhB,gCACmCoB,EADnC,kBC1DW,mCD0DX,mBAINpB,EAAO,MACPN,EAAQ,MACRE,EAAS,QAGP0B,EAAiB,SAAChO,EAAOC,GACd,cAAXA,GAIJqM,EAAS,OAoCX,OACE,cAAC3E,EAAA,EAAD,CAAKuD,UAAW,EAAGpC,aAAc,EAAjC,SACE,eAACmF,EAAA,EAAD,WACE,cAAC1I,EAAA,EAAD,CAAYjG,QAAQ,KAAKqD,UAAU,KAAKoD,MAAM,SAA9C,gCAIA,cAAC4B,EAAA,EAAD,CAAKuD,UAAW,EAAGpC,aAAc,EAAjC,SACE,eAACrG,EAAA,EAAD,CAAMqC,WAAS,EAAC7D,QAAS,EAAzB,UACE,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CACEhG,SAAU8Q,EACVxQ,gBAAiBA,EACjBiD,mBAAoBA,EACpBrD,gBAAiBA,EACjBE,eAAgBA,EAChBoD,yBAA0BA,MAG9B,cAACgC,EAAA,EAAD,CAAMC,MAAI,EAACK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CACEhG,SAAU8Q,EACV7Q,aAAcA,EACdC,gBAAiBA,EACjBC,YAAaA,EACbC,eAAgBA,EAChBC,sBAAuBA,EACvBC,gBAAiBA,WA3DzB8O,EAEA,cAAC6B,EAAA,EAAD,CACElM,UAAWX,EAAQsM,SACnBlQ,MAAI,EACJ0Q,iBAAkB,IAClBC,oBAAqBC,IACrBrP,QAASgP,EALX,SAOE,eAACM,EAAA,EAAD,CAAOC,SAAS,QAAQvP,QAASgP,EAAjC,UACE,cAACQ,EAAA,EAAD,oBACCnC,QAMJ5N,GAAQ8N,EAET,cAACkC,EAAA,EAAD,CAAUzM,UAAWX,EAAQmM,SAAU/P,MAAI,EAA3C,SACE,cAACmC,EAAA,EAAD,CAAkBC,MAAM,cAKzBpB,EAIE,cAAC,GAAD,CAAamG,aAAcnG,EAAKiQ,KAAM5D,SAAUrM,EAAKqP,OAHnD,KAwCL,cAAC,EAAD,U,8BElIFhN,GAAQ6N,YAAkC,CAC9CC,WAAY,CACVC,WAAY,UAEdC,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,eAAgB,UAElB,uBAAwB,CACtB9D,aAAc,MACdhG,MAAO,MACP+J,gBAAiB,UACjB9J,OAAQ,OAEV,6BAA8B,CAC5B2B,UAAW,gCACXoE,aAAc,MACd+D,gBAAiB,WAEnB,6BAA8B,CAC5B/D,aAAc,MACdpE,UAAW,gCACXmI,gBAAiB,QAEnBhR,KAAM,CACJiR,gBAAiB,8BACjBC,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,YAClBC,qBAAsB,cAO1BC,GAAU,WACd,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI/M,UAAWiL,KACjC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,YAAY/M,UAAWiL,KACzC,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,kBAAkB/M,UAAWiL,WAMvD+B,KAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAehP,MAAOA,GAAtB,SACE,eAACiP,EAAA,EAAD,CAAgBC,aAAW,EAA3B,UACE,cAACC,GAAA,EAAD,IACA,cAAC,GAAD,WAIN/C,SAASC,eAAe,W","file":"static/js/main.7a08fba5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardUI_card__2d1md\"};","import { CircularProgress, InputAdornment, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\nconst CityInput = ({\r\n  onSearch,\r\n  selectedCity,\r\n  setSelectedCity,\r\n  cityOptions,\r\n  setCityOptions,\r\n  isCityOptionsDisabled,\r\n  selectedCountry,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const loading = open && cityOptions.length === 0;\r\n\r\n  const onOpenHandler = () => {\r\n    setOpen(true);\r\n  };\r\n  const onCloseHandler = () => {\r\n    setOpen(false);\r\n  };\r\n  const renderInputHandler = params => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Search your city\"\r\n      placeholder=\"ex. Manila\"\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        ...params.InputProps,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <LocationCityIcon />\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n          <>\r\n            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n            {params.InputProps.endAdornment}\r\n          </>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n  const onChangeHandler = (event, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        setSelectedCity(value);\r\n        onSearch(value);\r\n        break;\r\n      case 'clear':\r\n        if (event.type === 'click') {\r\n          setSelectedCity(null);\r\n          onSearch(null);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const compareSelectedToParam = (option, value) =>\r\n    option.toString().toLowerCase() === value.toString().toLowerCase();\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      (async () => {\r\n        const response = await fetch(\r\n          'https://countriesnow.space/api/v0.1/countries/cities',\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              country: selectedCountry,\r\n            }),\r\n          }\r\n        );\r\n\r\n        const results = await response.json();\r\n\r\n        setCityOptions(results.data);\r\n      })();\r\n    }\r\n  }, [loading, selectedCountry, setCityOptions]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCity) onSearch(selectedCity);\r\n  }, [selectedCity, onSearch]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      autoHighlight\r\n      open={open}\r\n      loading={loading}\r\n      options={cityOptions}\r\n      value={selectedCity}\r\n      disabled={isCityOptionsDisabled}\r\n      onOpen={onOpenHandler}\r\n      onClose={onCloseHandler}\r\n      renderInput={renderInputHandler}\r\n      onChange={onChangeHandler}\r\n      getOptionSelected={compareSelectedToParam}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CityInput;\r\n","import { CircularProgress, InputAdornment, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nconst CountryInput = ({\r\n  onSearch,\r\n  selectedCountry,\r\n  setSelectedCountry,\r\n  setSelectedCity,\r\n  setCityOptions,\r\n  setIsCityOptionsDisabled,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const onOpenHandler = () => {\r\n    setOpen(true);\r\n  };\r\n  const onCloseHandler = () => {\r\n    setOpen(false);\r\n  };\r\n  const renderInputHandler = params => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Search your country\"\r\n      placeholder=\"ex. Philippines\"\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        ...params.InputProps,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <PublicIcon />\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: (\r\n          <>\r\n            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n            {params.InputProps.endAdornment}\r\n          </>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n  const onChangeHandler = (event, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option':\r\n        setIsCityOptionsDisabled(false);\r\n        setSelectedCountry(value);\r\n        break;\r\n      case 'clear':\r\n        if (event.type === 'click') {\r\n          setSelectedCity(null);\r\n          setIsCityOptionsDisabled(true);\r\n          setSelectedCountry(null);\r\n          setCityOptions([]);\r\n          onSearch(null);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const compareSelectedToParam = (option, value) =>\r\n    option.toString().toLowerCase() === value.toString().toLowerCase();\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      (async () => {\r\n        const response = await fetch(\r\n          'https://countriesnow.space/api/v0.1/countries'\r\n        );\r\n\r\n        const results = await response.json();\r\n\r\n        setOptions(results.data.map(data => data.country));\r\n      })();\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      autoHighlight\r\n      open={open}\r\n      loading={loading}\r\n      options={options}\r\n      value={selectedCountry}\r\n      onOpen={onOpenHandler}\r\n      onClose={onCloseHandler}\r\n      renderInput={renderInputHandler}\r\n      onChange={onChangeHandler}\r\n      getOptionSelected={compareSelectedToParam}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CountryInput;\r\n","import { Fab, Zoom, makeStyles, useScrollTrigger } from '@material-ui/core';\r\n\r\nimport { ArrowUpward } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ScrollToTop = () => {\r\n  const classes = useStyles();\r\n\r\n  const ScrollTop = ({ children, window }) => {\r\n    const trigger = useScrollTrigger({\r\n      disableHysteresis: true,\r\n      threshold: 100,\r\n    });\r\n\r\n    const scrollToTopHandler = () => {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n      <Zoom in={trigger}>\r\n        <div\r\n          role=\"presentation\"\r\n          className={classes.fab}\r\n          onClick={scrollToTopHandler}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollTop window={window}>\r\n      <Fab variant=\"extended\" aria-label=\"scroll back to top\">\r\n        <ArrowUpward />\r\n        Back To Top\r\n      </Fab>\r\n    </ScrollTop>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import { Card, Grid } from '@material-ui/core';\r\n\r\nimport classes from './CardUI.module.css';\r\n\r\nconst CardUI = props => {\r\n  return (\r\n    <Grid\r\n      item\r\n      component={Card}\r\n      className={`${classes.card} ${props.className}`}\r\n      elevation={props.elevation}\r\n      xs={props.xs}\r\n      sm={props.sm}\r\n      md={props.md}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","export const titleCase = (str = '') => {\r\n  str = str.toLowerCase();\r\n  let words = str.split(' ');\r\n\r\n  let capitalized = words.map(function (word) {\r\n    return word.charAt(0).toUpperCase() + word.substring(1, word.length);\r\n  });\r\n  return capitalized.join(' ');\r\n};\r\n\r\nexport const handleImageError = (e, description = '') => {\r\n  let fallbackText = description.trim().replace(' ', '+');\r\n\r\n  e.target.onerror = null;\r\n  e.target.src = `https://dummyimage.com/100x100/cfcfcf/fff.jpg&text=${fallbackText}`;\r\n};\r\n\r\nexport const scrollHandler = element => {\r\n  const yCoordinate = element.getBoundingClientRect().top + window.pageYOffset;\r\n  const yOffset = -30;\r\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' });\r\n};\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport {\r\n  faCloud,\r\n  faEye,\r\n  faTint,\r\n  faWind,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Image from 'material-ui-image';\r\nimport moment from 'moment';\r\nimport { titleCase } from '../utility/utility';\r\n\r\nconst WeatherCardDetailsData = ({ weathersData }) => {\r\n  const firstHourData = { ...weathersData[0] };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={6}>\r\n        <Image\r\n          src={`http://openweathermap.org/img/wn/${firstHourData.weather[0].icon}@2x.png`}\r\n          title={titleCase(firstHourData.weather[0].description)}\r\n          color={'transparent'}\r\n          imageStyle={{\r\n            width: '30%',\r\n            height: '30%',\r\n            position: 'initial',\r\n          }}\r\n          style={{ position: 'initial', paddingTop: '0' }}\r\n        />\r\n        <Typography component=\"p\">\r\n          {moment(firstHourData.dt_txt).format('dddd')}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {titleCase(firstHourData.weather[0].description)}\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\">\r\n          <b>{firstHourData.main.temp} &#8451;</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        align=\"center\"\r\n      >\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faTint} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Humidity\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.main.humidity} %</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faWind} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Wind Speed\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{(firstHourData.wind.speed * 3.6).toFixed(2)} km/h</b>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faCloud} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Cloudiness\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.clouds.all} %</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FontAwesomeIcon icon={faEye} />\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Visibility\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            <b>{firstHourData.visibility / 1000} km</b>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid></Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherCardDetailsData;\r\n","import {\r\n  Box,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\r\nimport { useContext, useState } from 'react';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    background: 'transparent !important',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  card_others: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n  },\r\n});\r\n\r\nconst WeatherCardDetailsList = ({ weathersData }) => {\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const isItemSelected = id => !!selected.find(el => el === id);\r\n\r\n  const clickHandler = id => () => {\r\n    const itemSelected = isItemSelected(id);\r\n\r\n    setSelected(currentSelected =>\r\n      itemSelected\r\n        ? currentSelected.filter(el => el !== id)\r\n        : currentSelected.concat(id)\r\n    );\r\n  };\r\n\r\n  const LeftArrow = () => {\r\n    const { isFirstItemVisible, scrollPrev } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <Box margin=\"auto\" marginRight={2}>\r\n        <IconButton\r\n          aria-label=\"left\"\r\n          disabled={isFirstItemVisible}\r\n          onClick={() => scrollPrev()}\r\n        >\r\n          <KeyboardArrowLeft fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const RightArrow = () => {\r\n    const { isLastItemVisible, scrollNext } = useContext(VisibilityContext);\r\n\r\n    return (\r\n      <Box margin=\"auto\" marginLeft={2}>\r\n        <IconButton\r\n          aria-label=\"right\"\r\n          disabled={isLastItemVisible}\r\n          onClick={() => scrollNext()}\r\n        >\r\n          <KeyboardArrowRight fontSize=\"large\" />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n      {weathersData.map((weatherData, index) => {\r\n        return (\r\n          <Box\r\n            itemId={index}\r\n            key={index}\r\n            onClick={clickHandler(index)}\r\n            selected={isItemSelected(index)}\r\n            margin={2}\r\n          >\r\n            <CardUI\r\n              className={`${classes.card} ${\r\n                index !== 0 ? classes.card_others : ''\r\n              }`}\r\n              elevation={index === 0 ? 5 : 0}\r\n            >\r\n              <CardContent>\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <Box marginBottom={3}>\r\n                      <Typography variant=\"caption\" component=\"h3\">\r\n                        {moment(weatherData.dt_txt).format('h A')}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h4\" component=\"p\">\r\n                      <b>{weatherData.main.temp} &#8451;</b>\r\n                    </Typography>\r\n                    {index === 0 && (\r\n                      <Typography variant=\"caption\" component=\"h4\">\r\n                        Feels like {weatherData.main.feels_like} &#8451;\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </CardUI>\r\n          </Box>\r\n        );\r\n      })}\r\n    </ScrollMenu>\r\n  );\r\n};\r\n\r\nexport default WeatherCardDetailsList;\r\n","import { Box, CardContent } from '@material-ui/core';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport { Fragment } from 'react';\r\nimport WeatherCardDetailsData from './WeatherCardDetailsData';\r\nimport WeatherCardDetailsList from './WeatherCardDetailsList';\r\nimport moment from 'moment';\r\n\r\nconst WeatherCardDetails = ({ weathersData, transformedWeathersData }) => {\r\n  const getSameDayWeathersData = dayCompare => {\r\n    const newWeathersData = weathersData\r\n      .slice()\r\n      .filter(weatherData =>\r\n        moment(weatherData.dt_txt).isSame(moment(dayCompare), 'day')\r\n      );\r\n\r\n    return newWeathersData;\r\n  };\r\n\r\n  return transformedWeathersData.map((weatherData, index) => {\r\n    const id =\r\n      index === 0\r\n        ? 'today'\r\n        : moment(weatherData.dt_txt).format('dddd').toLowerCase();\r\n\r\n    return (\r\n      <Fragment key={weatherData.dt_txt}>\r\n        <Box component={'section'} id={id}>\r\n          <CardUI>\r\n            <CardContent>\r\n              <WeatherCardDetailsData\r\n                weathersData={getSameDayWeathersData(weatherData.dt_txt)}\r\n              />\r\n              <br />\r\n              <WeatherCardDetailsList\r\n                weathersData={getSameDayWeathersData(weatherData.dt_txt)}\r\n              />\r\n            </CardContent>\r\n          </CardUI>\r\n        </Box>\r\n        <br />\r\n      </Fragment>\r\n    );\r\n  });\r\n};\r\n\r\nexport default WeatherCardDetails;\r\n","import {\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, scrollHandler, titleCase } from '../utility/utility';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport moment from 'moment';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    width: '200px',\r\n  },\r\n  card_media: {\r\n    display: 'initial',\r\n    width: '50%',\r\n  },\r\n  hash_link: {\r\n    textAlign: 'center',\r\n    textDecoration: 'initial',\r\n    color: 'initial',\r\n  },\r\n}));\r\n\r\nconst WeatherCard = ({ weatherData }) => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <CardUI className={classes.card}>\r\n      <HashLink\r\n        smooth\r\n        className={classes.hash_link}\r\n        component={CardActionArea}\r\n        to={`${location.pathname}#${moment(weatherData.dt_txt)\r\n          .format('dddd')\r\n          .toLowerCase()}`}\r\n        scroll={scrollHandler}\r\n      >\r\n        <CardHeader\r\n          align=\"center\"\r\n          title={moment(weatherData.dt_txt).format('dddd')}\r\n        ></CardHeader>\r\n        <CardMedia\r\n          className={classes.card_media}\r\n          component=\"img\"\r\n          image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n          title={titleCase(weatherData.weather[0].description)}\r\n          alt={weatherData.weather[0].description}\r\n          onError={e => handleImageError(e, weatherData.weather[0].description)}\r\n        ></CardMedia>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n            {weatherData.main.temp}\r\n            &deg;\r\n          </Typography>\r\n        </CardContent>\r\n      </HashLink>\r\n    </CardUI>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { Box, makeStyles, useMediaQuery } from '@material-ui/core';\r\n\r\nimport { ScrollMenu } from 'react-horizontal-scrolling-menu';\r\nimport WeatherCard from './WeatherCard';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  scroll_menu: {\r\n    '& div:nth-child(1)': {\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n});\r\n\r\nconst WeatherCardList = ({ weathersData }) => {\r\n  const classes = useStyles();\r\n  const screenMatchesMin1024 = useMediaQuery('(min-width:1024px)');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const isItemSelected = id => !!selected.find(el => el === id);\r\n\r\n  const clickHandler = id => () => {\r\n    const itemSelected = isItemSelected(id);\r\n\r\n    setSelected(currentSelected =>\r\n      itemSelected\r\n        ? currentSelected.filter(el => el !== id)\r\n        : currentSelected.concat(id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollMenu wrapperClassName={screenMatchesMin1024 && classes.scroll_menu}>\r\n      {weathersData.map((weatherData, index) => {\r\n        return (\r\n          <Box\r\n            itemId={index}\r\n            key={index}\r\n            onClick={clickHandler(index)}\r\n            selected={isItemSelected(index)}\r\n            margin={1}\r\n          >\r\n            <WeatherCard weatherData={weatherData} />\r\n          </Box>\r\n        );\r\n      })}\r\n    </ScrollMenu>\r\n  );\r\n};\r\n\r\nexport default WeatherCardList;\r\n","import {\r\n  CardActionArea,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { handleImageError, scrollHandler, titleCase } from '../utility/utility';\r\n\r\nimport CardUI from '../ui/CardUI';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card_media: {\r\n    display: 'initial',\r\n    width: '30%',\r\n  },\r\n  hash_link: {\r\n    textAlign: 'center',\r\n    textDecoration: 'initial',\r\n    color: 'initial',\r\n  },\r\n}));\r\n\r\nconst WeatherToday = ({ weatherData, cityData }) => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <CardUI xs={10} sm={8} md={6} lg={4}>\r\n        <HashLink\r\n          smooth\r\n          className={classes.hash_link}\r\n          component={CardActionArea}\r\n          to={`${location.pathname}#today`}\r\n          scroll={scrollHandler}\r\n        >\r\n          <CardHeader\r\n            align=\"center\"\r\n            title={`${cityData.name}, ${cityData.country}`}\r\n          ></CardHeader>\r\n          <CardMedia\r\n            className={classes.card_media}\r\n            component=\"img\"\r\n            image={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n            title={titleCase(weatherData.weather[0].description)}\r\n            alt={weatherData.weather[0].description}\r\n            onError={e =>\r\n              handleImageError(e, weatherData.weather[0].description)\r\n            }\r\n          ></CardMedia>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              {weatherData.main.temp}\r\n              &deg;\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n              {titleCase(weatherData.weather[0].description)}\r\n            </Typography>\r\n          </CardContent>\r\n        </HashLink>\r\n      </CardUI>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherToday;\r\n","import { Divider, makeStyles } from '@material-ui/core';\r\n\r\nimport WeatherCardDetails from './WeatherCardDetails';\r\nimport WeatherCardList from './WeatherCardList';\r\nimport WeatherToday from './WeatherToday';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    marginTop: '20px',\r\n    marginBottom: '20px',\r\n    height: '4px',\r\n    borderRadius: '5px',\r\n  },\r\n});\r\n\r\nconst WeatherList = props => {\r\n  const classes = useStyles();\r\n\r\n  const transformWeathersData = (exceptFirstDay = true) => {\r\n    let weathersData = props.weathersData.slice();\r\n    weathersData = exceptFirstDay\r\n      ? weathersData.filter(\r\n          weatherData => !moment(weatherData.dt_txt).isSame(moment(), 'day')\r\n        )\r\n      : weathersData;\r\n    const newWeathersData = [];\r\n\r\n    for (let i = 0; i < weathersData.length; i++) {\r\n      const dateCompare = moment().add(\r\n        exceptFirstDay ? newWeathersData.length + 1 : newWeathersData.length,\r\n        'days'\r\n      );\r\n\r\n      const firstWeatherofDayData = weathersData.filter(weatherData =>\r\n        moment(weatherData.dt_txt).isSame(dateCompare, 'day')\r\n      )[0];\r\n\r\n      if (\r\n        newWeathersData.find(newWeatherData =>\r\n          moment(newWeatherData.dt_txt).isSame(\r\n            moment(weathersData[i].dt_txt),\r\n            'day'\r\n          )\r\n        ) === undefined\r\n      ) {\r\n        newWeathersData.push(firstWeatherofDayData);\r\n      }\r\n    }\r\n\r\n    return newWeathersData;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WeatherToday\r\n        weatherData={props.weathersData[0]}\r\n        cityData={props.cityData}\r\n      />\r\n      <br />\r\n      <WeatherCardList weathersData={transformWeathersData()} />\r\n      <Divider className={classes.divider} />\r\n      <WeatherCardDetails\r\n        weathersData={props.weathersData.slice()}\r\n        transformedWeathersData={transformWeathersData(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { scrollHandler } from '../utility/utility';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useFetch = (countryParam, cityParam, initialUrl) => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setIsLoading(true);\r\n\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(url);\r\n\r\n          const data = await response.json();\r\n\r\n          if (!response.ok) {\r\n            throw new Error(data.message);\r\n          }\r\n\r\n          setIsLoading(false);\r\n\r\n          if (data.cod >= 400) {\r\n            setError(data.message);\r\n            return;\r\n          }\r\n\r\n          setData(data);\r\n\r\n          const { hash } = window.location;\r\n          if (hash) {\r\n            const element = document.getElementById(hash.replace('#', ''));\r\n            setTimeout(scrollHandler(element));\r\n          }\r\n\r\n          console.log(history);\r\n          if (countryParam && cityParam)\r\n            history.push(\r\n              `/${countryParam.toLowerCase()}/${cityParam.toLowerCase()}`\r\n            );\r\n        } catch (error) {\r\n          setIsLoading(false);\r\n          setError(error.message);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [url, history, countryParam, cityParam]);\r\n\r\n  return { data, error, isLoading, setUrl, setData, setError };\r\n};\r\n\r\nexport default useFetch;\r\n","import { API_BASE_URL, API_KEY } from './api/config';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Container,\n  Grid,\n  Slide,\n  Snackbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nimport CityInput from './components/CityInput';\nimport CountryInput from './components/CountryInput';\nimport ScrollToTop from './ui/ScrollToTop';\nimport WeatherList from './components/WeatherList';\nimport useFetch from './hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  snackbar: {\n    textAlign: 'initial',\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const { country: countryParam, city: cityParam } = useParams();\n\n  const [selectedCountry, setSelectedCountry] = useState(countryParam ?? null);\n\n  const [selectedCity, setSelectedCity] = useState(cityParam ?? null);\n  const [cityOptions, setCityOptions] = useState([]);\n  const [isCityOptionsDisabled, setIsCityOptionsDisabled] = useState(\n    !cityParam ?? true\n  );\n\n  const { data, error, isLoading, setUrl, setData, setError } = useFetch(\n    selectedCountry,\n    selectedCity\n  );\n\n  const searchCityHandler = city => {\n    if (city) {\n      setUrl(\n        `${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n      );\n    } else {\n      setUrl(null);\n      setData(null);\n      setError(null);\n    }\n  };\n  const onCloseHandler = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setError(null);\n  };\n\n  const getContent = () => {\n    if (error) {\n      return (\n        <Snackbar\n          className={classes.snackbar}\n          open\n          autoHideDuration={10000}\n          TransitionComponent={Slide}\n          onClose={onCloseHandler}\n        >\n          <Alert severity=\"error\" onClose={onCloseHandler}>\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        </Snackbar>\n      );\n    }\n\n    if (!data && isLoading) {\n      return (\n        <Backdrop className={classes.backdrop} open>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      );\n    }\n\n    if (!data) {\n      return null;\n    }\n\n    return <WeatherList weathersData={data.list} cityData={data.city} />;\n  };\n\n  return (\n    <Box marginTop={2} marginBottom={2}>\n      <Container>\n        <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n          Check Your Weather\n        </Typography>\n\n        <Box marginTop={2} marginBottom={2}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={6}>\n              <CountryInput\n                onSearch={searchCityHandler}\n                selectedCountry={selectedCountry}\n                setSelectedCountry={setSelectedCountry}\n                setSelectedCity={setSelectedCity}\n                setCityOptions={setCityOptions}\n                setIsCityOptionsDisabled={setIsCityOptionsDisabled}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={6}>\n              <CityInput\n                onSearch={searchCityHandler}\n                selectedCity={selectedCity}\n                setSelectedCity={setSelectedCity}\n                cityOptions={cityOptions}\n                setCityOptions={setCityOptions}\n                isCityOptionsDisabled={isCityOptionsDisabled}\n                selectedCountry={selectedCountry}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n\n        {getContent()}\n        <ScrollToTop />\n      </Container>\n    </Box>\n  );\n};\n\nexport default App;\n","export const API_KEY = '34f38061357d6592fb59314ceb889161';\r\nexport const API_BASE_URL = 'https://api.openweathermap.org/';\r\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport {\n  StylesProvider,\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme,\n} from '@material-ui/core/styles';\n\nimport App from './App';\nimport { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst theme = unstable_createMuiStrictModeTheme({\n  typography: {\n    fontFamily: 'Ubuntu',\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        html: {\n          scrollBehavior: 'smooth',\n        },\n        '*::-webkit-scrollbar': {\n          borderRadius: '5px',\n          width: '7px',\n          backgroundColor: '#F5F5F5',\n          height: '7px',\n        },\n        '*::-webkit-scrollbar-track': {\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.3)',\n          borderRadius: '5px',\n          backgroundColor: '#F5F5F5',\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '5px',\n          boxShadow: 'inset 0 0 6px rgba(0,0,0,0.3)',\n          backgroundColor: '#555',\n        },\n        body: {\n          backgroundImage: 'url(/assets/weather-bg.jpg)',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundAttachment: 'fixed',\n        },\n      },\n    },\n  },\n});\n\nconst Routing = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/:country\" component={App} />\n        <Route exact path=\"/:country/:city\" component={App} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <CssBaseline />\n        <Routing />\n      </StylesProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}